// The project itself needs to declare its own repositories and dependencies
// in the build file located in the [root]\fluder\ folder.

// Apply the Android plugin for Gradle to the build:
apply plugin: 'com.android.application'

// The "android {}" element (section) specifies Android-specific build options:
android {
    // The "compileSdkVersion" property specifies the compilation target:
    compileSdkVersion 21        // Android 5.0 (API level 21).
    // Build Tools is a component of the Android SDK required for building Android application code:
    buildToolsVersion "21.1.2"  // Latest revision (as of December 2014).

    // The "defaultConfig {}" element configures core settings and
    // overrides entries in the manifest file (AndroidManifest.xml):
    defaultConfig {
        // Starting in Gradle v0.11.0, the "applicationId" property (instead of "packageName")
        // is used to configure the manifest 'packageName' entry:
        applicationId "eu.tumenas.fluder"
        // The earliest version of the Android SDK that the app supports:
        minSdkVersion 14        // Fragment class requires Android 3.0 Honeycomb (API Level 11), and attribute
                                // layout_row is only used in Android 4.0 Ice Cream Sandwich (API level 14) and higher.
                                // With the minimum SDK version of 8, the app will run on 99,3% of the devices,
                                // while the cumulative distribution of API 10 is 87,9% (as of December, 2014).
        // The highest version of Android with which the app has benn tested:
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {               // The release build type is not signed by default.
            minifyEnabled false // ProGuard obfuscates the classes during the build process.
                                // "runProguard" was renamed to "minifyEnabled" since Gradle v0.14.0.
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

// Gradle based projects support for binary libraries (AARs).
// One no longer need to copy library sources (such as ActionBarSherlock) into the project:
// simply declare a dependency and the lib is automatically downloaded and merged into the project.
// The build system adds all the compile dependencies to the compilation classpath
// and includes them in the final package.
// The "dependencies {}" element declares the dependencies for the app module:
dependencies {
    //compile fileTree(dir: 'libs', include: ['*.jar'])
    // Avoid using + (automatically picking the latest available version rather than specific)
    // in version numbers, as this can lead to unpredictable and unrepeatable builds.
}
